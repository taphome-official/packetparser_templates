<?xml version="1.0" encoding="utf-8"?>
<Templates format="2" protocolVersion="82" locationId="799e6d0a-8cf9-463c-b38f-67076dfdeb60">
  <Template revision="1.0">
    <SuggestedCCUParameters />
    <RevisionHistory>
      <Revision id="1.0">Initial version</Revision>
    </RevisionHistory>
    <Name>Door / Window Sensor</Name>
    <CcuModel>PacketParserCCU</CcuModel>
    <Producer></Producer>
    <Model></Model>
    <Description>Integrate Zigbee devices via Zigbee2MQTT package and an MQTT broker. This allows local control between Zigbee network and TapHome: more about this here: https://github.com/nygma2004/km/wiki/TapHome-Examples#zigbee2mqtt-integration</Description>
    <Module>
      <Name>Door / Window Sensor</Name>
      <Id>-1</Id>
      <Model>PacketParserModuleMqtt</Model>
      <DeviceProperties>
        <InternalPollInterval>5000</InternalPollInterval>
        <IpAddress>192.168.1.176</IpAddress>
        <Port>1883</Port>
        <RootTopic>zigbee2mqtt/Window sensor</RootTopic>
      </DeviceProperties>
      <Devices>
        <Device>
          <Name>${deviceType_BatterySOC} (1)</Name>
          <Model>PacketParserAnalogInput</Model>
          <Id>-2</Id>
          <DeviceProperties>
            <DeviceType>11001</DeviceType>
            <SerializedValueLogTypeConversions />
            <ReadScriptPacketParser />
            <InternalPollInterval>2500</InternalPollInterval>
            <CustomVariables />
            <ServiceAttributesScriptsPacketParser></ServiceAttributesScriptsPacketParser>
            <ServiceActionsScriptsPacketParser></ServiceActionsScriptsPacketParser>
            <ListenerScriptPacketParser>VAR json := TOSTRING(RECEIVEDBYTES);
VAR topic := PARSEJSON(json, "Topic");
VAR payload := PARSEJSON(json, "Payload");

VAR batt := PARSEJSON(payload,"battery");
An := IF(ISNULL(batt), NaN, batt/100);
</ListenerScriptPacketParser>
            <ShouldDoPeriodicWrite>False</ShouldDoPeriodicWrite>
            <ReadInputLevelScriptPacketParser></ReadInputLevelScriptPacketParser>
          </DeviceProperties>
        </Device>
        <Device>
          <Name>${deviceType_WindowSensor}</Name>
          <Model>PacketParserReedContact</Model>
          <Id>-3</Id>
          <DeviceProperties>
            <DeviceType>1040</DeviceType>
            <ReadScriptPacketParser></ReadScriptPacketParser>
            <InternalPollInterval>2500</InternalPollInterval>
            <CustomVariables />
            <ServiceAttributesScriptsPacketParser></ServiceAttributesScriptsPacketParser>
            <ServiceActionsScriptsPacketParser></ServiceActionsScriptsPacketParser>
            <ListenerScriptPacketParser>VAR json := TOSTRING(RECEIVEDBYTES);
VAR topic := PARSEJSON(json, "Topic");
VAR payload := PARSEJSON(json, "Payload");

VAR contact := PARSEJSON(payload,"contact",1);
IF !ISNULL(contact)
    IF contact
    Rc := 0;
    ELSE
    Rc := 1;
     END
END</ListenerScriptPacketParser>
            <OnStateIconId>111</OnStateIconId>
            <OffStateIconId>112</OffStateIconId>
            <OnStateName>${general_open}</OnStateName>
            <OffStateName>${general_closed}</OffStateName>
            <ReadStateScriptPacketParser></ReadStateScriptPacketParser>
          </DeviceProperties>
        </Device>
      </Devices>
    </Module>
  </Template>
</Templates>